<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>JSFAQ Settings</value>
  </data>
  <data name="lblCategoryType.Help" xml:space="preserve">
    <value>Choose category type.</value>
  </data>
  <data name="lblCategoryType.Text" xml:space="preserve">
    <value>Category Type</value>
  </data>
  <data name="lblDefaultOpen.Help" xml:space="preserve">
    <value>Which panel is currently open.</value>
  </data>
  <data name="lblDefaultOpen.Text" xml:space="preserve">
    <value>Currently Active</value>
  </data>
  <data name="lblEmptyCategory.Help" xml:space="preserve">
    <value>Display/Hide empty category.</value>
  </data>
  <data name="lblEmptyCategory.Text" xml:space="preserve">
    <value>Show Empty Category</value>
  </data>
  <data name="lblExpandCollapse.Help" xml:space="preserve">
    <value>Display/Hide expand/collapse button.</value>
  </data>
  <data name="lblExpandCollapse.Text" xml:space="preserve">
    <value>Show Expand/Collapse</value>
  </data>
  <data name="lblIsSorted.Help" xml:space="preserve">
    <value>Use sorting or not.</value>
  </data>
  <data name="lblIsSorted.Text" xml:space="preserve">
    <value>Use Sorting</value>
  </data>
  <data name="lblQuestCategory.Help" xml:space="preserve">
    <value>Display/Hide question category.</value>
  </data>
  <data name="lblQuestCategory.Text" xml:space="preserve">
    <value>Show Question Category</value>
  </data>
  <data name="lblShowDates.Help" xml:space="preserve">
    <value>Display/Hide dates.</value>
  </data>
  <data name="lblShowDates.Text" xml:space="preserve">
    <value>Show Dates</value>
  </data>
  <data name="lblSortBy.Help" xml:space="preserve">
    <value>Choose sorting by.</value>
  </data>
  <data name="lblSortBy.Text" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="lblSortType.Help" xml:space="preserve">
    <value>Choose sorting type.</value>
  </data>
  <data name="lblSortType.Text" xml:space="preserve">
    <value>Sort Type</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>JSFAQModule - Settings</value>
  </data>
  <data name="lblAnimationType.Help" xml:space="preserve">
    <value />
  </data>
  <data name="lblAnimationType.Text" xml:space="preserve">
    <value>Animate</value>
  </data>
  <data name="lblCollapsible.Help" xml:space="preserve">
    <value>Whether all the sections can be closed at once. Allows collapsing the active section.</value>
  </data>
  <data name="lblCollapsible.Text" xml:space="preserve">
    <value>Collapsible</value>
  </data>
  <data name="lblDefaultOpenType.Help" xml:space="preserve">
    <value>Collapsing all sections.</value>
  </data>
  <data name="lblDefaultOpenType.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="lblDisabled.Help" xml:space="preserve">
    <value />
  </data>
  <data name="lblDisabled.Text" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="lblEvent.Help" xml:space="preserve">
    <value>The event that accordion headers will react to in order to activate the associated panel.</value>
  </data>
  <data name="lblEvent.Text" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="lblHeightStyle.Help" xml:space="preserve">
    <value>Controls the height of the accordion and each panel. Possible values: &lt;ul&gt;&lt;li&gt;&lt;b&gt;Auto&lt;/b&gt; - All panels will be set to the height of the tallest panel.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Fill&lt;/b&gt; - Expand to the available height based on the accordion's parent height.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Content&lt;/b&gt; - Each panel will be only as tall as its content.&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="lblHeightStyle.Text" xml:space="preserve">
    <value>Height Style</value>
  </data>
  <data name="lblIconsType.Help" xml:space="preserve">
    <value>Icons to use for headers. Set to &lt;b&gt;false&lt;/b&gt; to have no icons displayed.</value>
  </data>
  <data name="lblIconsType.Text" xml:space="preserve">
    <value>Icons</value>
  </data>
</root>